on:
  push:
    branches:
      - dev
      - master
      - feature/github-actions-readme-badges

env:
  DOTNET_INSTALL_DIR: "./.dotnet"
  Solution_Name: AElf.All.sln
  Service_Name: AELF

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0'

      - name: Download AElf build tools
        run: bash scripts/download_binary.sh

      - name: Install Protobuf
        run: bash scripts/install_protobuf.sh

      - run: dotnet restore ${{ env.Solution_Name }}
      - run: dotnet build --no-restore ${{ env.Solution_Name }}
      - run: dotnet test --no-build --no-restore --verbosity normal -l:"trx;LogFileName=TestResults.xml" ${{ env.Solution_Name }}

      - name: Install xmlstarlet
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet

      - name: Extract Test Counts
        id: test_counts
        run: |
          passed=0
          failed=0
          skipped=0
          for file in $(find . -name 'TestResults.xml')
          do
            echo "Processing file: $file"
            passed_value=$(xmlstarlet sel -N x="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" -t -v "/x:TestRun/x:ResultSummary/x:Counters/@passed" "$file")
            echo "Passed value from xmlstarlet: $passed_value"
            passed=$((passed + passed_value))
            failed_value=$(xmlstarlet sel -N x="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" -t -v "/x:TestRun/x:ResultSummary/x:Counters/@failed" "$file")
            echo "Failed value from xmlstarlet: $failed_value"
            failed=$((failed + failed_value))
            total_value=$(xmlstarlet sel -N x="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" -t -v "/x:TestRun/x:ResultSummary/x:Counters/@total" "$file")
            echo "Total value from xmlstarlet: $total_value"
            executed_value=$(xmlstarlet sel -N x="http://microsoft.com/schemas/VisualStudio/TeamTest/2010" -t -v "/x:TestRun/x:ResultSummary/x:Counters/@executed" "$file")
            echo "Executed value from xmlstarlet: $executed_value"
            skipped_value=$((total_value - executed_value))
            skipped=$((skipped + skipped_value))
            echo "Skipped: $skipped"
          done
          echo "PASSED=$passed" >> $GITHUB_ENV
          echo "FAILED=$failed" >> $GITHUB_ENV
          echo "SKIPPED=$skipped" >> $GITHUB_ENV

      - name: Update Gist
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GIST_TOKEN }}
          script: |
            const fs = require('fs');
            const passed = "${{ env.PASSED }}";
            const failed = "${{ env.FAILED }}";
            const skipped = "${{ env.SKIPPED }}";
            const gistId = "59e13bd3823d754542ac98d24b3329b4";
            const filename = "test-results.json";
            const color = failed > 0 ? "red" : "brightgreen";
            const content = `{"schemaVersion":1,"label":"tests","message":"${passed} passed, ${failed} failed, ${skipped} skipped","color":"${color}"}`;

            let gist;
            try {
              gist = await github.rest.gists.get({ gist_id: gistId });
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }

            await github.rest.gists.update({
              gist_id: gistId,
              files: {
                [filename]: { content }
              }
            });